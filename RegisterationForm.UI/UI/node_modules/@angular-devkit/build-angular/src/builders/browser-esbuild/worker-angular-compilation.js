"use strict";
// /**
//  * @license
//  * Copyright Google LLC All Rights Reserved.
//  *
//  * Use of this source code is governed by an MIT-style license that can be
//  * found in the LICENSE file at https://angular.io/license
//  */
// import type ng from '@angular/compiler-cli';
// import { Worker } from 'node:worker_threads';
// import { AngularHostOptions } from './angular-host';
// interface Message {
//   id: number;
// }
// interface InitializeRequest extends Message {
//   tsconfig: string;
//   tsCallbackId: number;
//   tcoCallbackId?: number;
// }
// // eslint-disable-next-line @typescript-eslint/no-explicit-any
// type ResponseCallback = (...args: any[]) => void;
// let callbackIds = 0;
// export class WorkerAngularCompilation {
//   #worker: Worker;
//   #callbacks = new Map<number, ResponseCallback>();
//   constructor() {
//     this.#worker = new Worker(require.resolve('./compilation-worker'));
//   }
//   async initialize(
//     tsconfig: string,
//     hostOptions: AngularHostOptions,
//     transformCompilerOptions?: (compilerOptions: ng.CompilerOptions) => ng.CompilerOptions,
//   ): Promise<{ compilerOptions: ng.CompilerOptions }> {
//     const request: InitializeRequest = {
//       id: ++callbackIds,
//       tsconfig,
//       tsCallbackId: ++callbackIds,
//     };
//     this.#callbacks.set(request.tsCallbackId, () => {
//       hostOptions.transformStylesheet();
//     });
//     if (transformCompilerOptions) {
//       request.tcoCallbackId = ++callbackIds;
//       this.#callbacks.set(request.tcoCallbackId, (id: number, compilerOptions) => {
//         try {
//             transformCompilerOptions(compilerOptions);
//         } catch (e) {
//         }
//       });
//     }
//     const result = new Promise<{ compilerOptions: ng.CompilerOptions }>((resolve, reject) => {
//         this.#callbacks.set(request.id, () => {
//             resolve({});
//         });
//     });
//     this.#worker.postMessage(request);
//     return result;
//   }
// }
